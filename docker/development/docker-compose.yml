version: '3.7'

services:
  configserver:
    image: msa/config-server:0.0.2-SNAPSHOT
    ports:
      - "8071:8071"
    networks:
      backend:
        aliases:
          - "configserver"

  eurekaserver:
    image: msa/eureka-server:0.0.1-SNAPSHOT
    ports:
      - "8070:8070"
    depends_on:
      configserver:
        condition: service_started
    networks:
      backend:
        aliases:
          - "eurekaserver"

  gatewayserver:
    image: msa/gateway-server:0.0.2-SNAPSHOT
    ports:
      - "8062:8062"
    environment:
      PROFILE: "default"
      SERVER_PORT: "8062"
      CONFIGSERVER_URI: "http://configserver:8071"
      CONFIGSERVER_PORT: "8071"
      EUREKASERVER_URI: "http://eurekaserver:8070/eureka/"
      EUREKASERVER_PORT: "8070"
    depends_on:
      configserver:
        condition: service_started
      eurekaserver:
        condition: service_started
    networks:
      backend:
        aliases:
          - "gateway"

  zookeeper:
    image: zookeeper:3.7.0
    ports:
      - 2181:2181
    networks:
      backend:
        aliases:
          - "zookeeper"
  kafkaserver:
    image: wurstmeister/kafka:latest
    ports:
      - 9092:9092
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS=dresses:1:1,ratings:1:1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - zookeeper
    networks:
      backend:
        aliases:
          - "kafka"

  redisserver:
    image: redis:alpine
    container_name: redis
    ports:
      - 6379:6379
    networks:
      backend:
        aliases:
          - "redis"

  diaryservice:
    image: msa/diary-service:0.0.8-SNAPSHOT
    ports:
      - "8081:8081"
    environment:
      PROFILE: "dev"
      CONFIGSERVER_URI: "http://configserver:8071"
      CONFIGSERVER_PORT: "8071"
    depends_on:
      configserver:
        condition: service_started
      kafkaserver:
        condition: service_started
    networks:
      - backend

  readdiaryservice:
    image: msa/read-diary-service:0.0.6-SNAPSHOT
    ports:
      - "8083:8083"
    environment:
      PROFILE: "dev"
      CONFIGSERVER_URI: "http://configserver:8071"
      CONFIGSERVER_PORT: "8071"
    depends_on:
      configserver:
        condition: service_started
      kafkaserver:
        condition: service_started
    networks:
      - backend

  writerservice:
    image: msa/writer-service:0.0.7-SNAPSHOT
    ports:
      - "8082:8082"
    environment:
      profile: "dev"
      CONFIGSERVER_URI: "http://configserver:8071"
      CONFIGSERVER_PORT: "8071"
    depends_on:
      configserver:
        condition: service_started
      kafkaserver:
        condition: service_started
    networks:
      - backend

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.1
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9300:9300
      - 9200:9200
    networks:
      backend:
        aliases:
          - "elasticsearch"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.11.1
    container_name: kibana
    environment:
      ELASTICSEARCH_URL: "http://elasticsearch:9300"
    ports:
      - 5601:5601
    networks:
      backend:
        aliases:
          - "kibana"

  logstash:
    image: docker.elastic.co/logstash/logstash:7.12.0
    container_name: logstash
    command: logstash -f /etc/logstash/conf.d/logstash.conf
    volumes:
      - ./config:/etc/logstash/conf.d
    ports:
      - "5000:5000"
    networks:
      backend:
        aliases:
          - "logstash"

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    depends_on:
      - elasticsearch
    environment:
      - STORAGE_TYPE=elasticsearch
      - "ES_HOSTS=elasticsearch:9300"
    ports:
      - "9411:9411"
    networks:
      backend:
        aliases:
          - "zipkin"

volumes:
  esdata1:
    driver: local

networks:
  backend:
    driver: bridge
